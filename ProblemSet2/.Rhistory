res %>%
arrange(desc(TotalDeaths)) %>%
select(state) %>%
head(3)
dfByDate <- getDataByDate(-Inf, Inf)
# merge dfByDate and USstates
m <- merge(dfByDate, s_original, by = c("state"))
# variable 1 - deaths per 10k people
m <- m %>%
mutate(deathsPer10k = as.integer(TotalDeaths / pop2019 * 10000))
# variable 2 - cases per 10k people
m <- m %>%
mutate(casesPer10k = as.integer(TotalCases / pop2019 * 10000))
# variable 3 - population density = # people / land area
m <- m %>%
mutate(popDensity = pop2019 / sqMiles)
head(m)
head(m[ ,1:3], 3)
ggplot(m, aes(x = popDensity, y = deathsPer10k)) +
geom_point(size = 1,
color = "red",
alpha = 0.5) +
geom_smooth(
formula = y ~ x,
method = "lm",
color = "black",
se = FALSE
) +
labs(
x = "Population Density",
y = "Deaths Per 10k People",
title = "U.S. Covid Deaths Per 10,000 People Against Density \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
# Load packages used in this session of R
library(tidyverse)
library(knitr)
library(readxl) # Package to read Excel data
library(ggrepel)
# As needed, set path to folder where data is located.
opts_knit$set(root.dir = "C:/Users/Xue Feng/Desktop/OPIM601-BA/ProblemSet2")
# load data
c_original <- read_csv("OxCGRT_latest.csv")
s_original <- read_excel("USstates.xlsx", sheet = 1)
# filter data as required
c <- c_original %>%
filter(CountryName == "United States") %>%
select(
RegionName,
RegionCode,
Date,
GovernmentResponseIndex,
ConfirmedCases,
ConfirmedDeaths
) %>%
mutate(stAbbrev = str_replace_all(
string = RegionCode,
pattern = "US_",
replacement = ""
))
head(c)
head(s_original)
head(c[, 1:3], 3)
c <- c %>%
# create 2 columns: # death per day, # cases per day
mutate(DeathsPerDay = diff(c(0, ConfirmedDeaths))) %>%
mutate(CasesPerDay = diff(c(0, ConfirmedCases)))
getDataByDate <- function(startDate, endDate) {
res = data.frame()
regionNames <- unique(c$RegionName)
regionNames <- regionNames[2:length(regionNames)]
for(name in regionNames) {
curDf <- c %>%
filter(RegionName == name) %>%
filter(Date >= startDate) %>%
filter(Date <= endDate) %>%
dplyr::summarise(state = name,
AveStatePolicy = mean(GovernmentResponseIndex, na.rm = TRUE),
TotalDeaths = sum(DeathsPerDay[DeathsPerDay > 0], na.rm = TRUE),
TotalCases = sum(CasesPerDay[CasesPerDay > 0], na.rm = TRUE),
.groups = 'drop')
res <- rbind(res, curDf)
}
return(res)
}
res <- getDataByDate(20201101, 20201115)
res
res %>%
arrange(desc(TotalDeaths)) %>%
select(state) %>%
head(3)
dfByDate <- getDataByDate(-Inf, Inf)
# merge dfByDate and USstates
m <- merge(dfByDate, s_original, by = c("state"))
# variable 1 - deaths per 10k people
m <- m %>%
mutate(deathsPer10k = as.integer(TotalDeaths / pop2019 * 10000))
# variable 2 - cases per 10k people
m <- m %>%
mutate(casesPer10k = as.integer(TotalCases / pop2019 * 10000))
# variable 3 - population density = # people / land area
m <- m %>%
mutate(popDensity = pop2019 / sqMiles)
head(m)
head(m[ ,1:3], 3)
ggplot(m, aes(x = popDensity, y = deathsPer10k)) +
geom_point(size = 1,
color = "red",
alpha = 0.5) +
geom_smooth(
formula = y ~ x,
method = "lm",
color = "black",
se = FALSE
) +
labs(
x = "Population Density",
y = "Deaths Per 10k People",
title = "U.S. Covid Deaths Per 10,000 People Against Density \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
# Load packages used in this session of R
library(tidyverse)
library(knitr)
library(readxl) # Package to read Excel data
library(ggrepel)
# As needed, set path to folder where data is located.
opts_knit$set(root.dir = "C:/Users/Xue Feng/Desktop/OPIM606/ProblemSet2")
ggplot(m, aes(x = popDensity, y = deathsPer10k)) +
geom_point(size = 1,
color = Party,
alpha = 0.5) +
labs(
x = "Population Density",
y = "Deaths Per 10k People",
title = "U.S. Covid Deaths Per 10,000 People Against Density \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
ggplot(m, aes(x = popDensity, y = deathsPer10k, color = Party)) +
geom_point(size = 1,
alpha = 0.5) +
labs(
x = "Population Density",
y = "Deaths Per 10k People",
title = "U.S. Covid Deaths Per 10,000 People Against Density \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
ggplot(m, aes(x = popDensity, y = casesPer10k, color = Party)) +
geom_point(size = 1,
alpha = 0.5) +
labs(
x = "Population Density",
y = "Cases Per 10k People",
title = "U.S. Covid Cases Per 10,000 People Against Density by Party \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
ggplot(m, aes(x = popDensity, y = casesPer10k, fill = Party)) +
geom_point(size = 1,
alpha = 0.5) +
labs(
x = "Population Density",
y = "Cases Per 10k People",
title = "U.S. Covid Cases Per 10,000 People Against Density by Party \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
ggplot(m, aes(x = popDensity, y = casesPer10k, fill = Party)) +
scale_fill_manual(values = c("blue", "red"))
geom_point(size = 1,
alpha = 0.5) +
labs(
x = "Population Density",
y = "Cases Per 10k People",
title = "U.S. Covid Cases Per 10,000 People Against Density by Party \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
ggplot(m, aes(x = popDensity, y = casesPer10k, fill = Party)) +
scale_fill_manual(values = c("blue", "red")) +
geom_point(size = 1,
alpha = 0.5) +
labs(
x = "Population Density",
y = "Cases Per 10k People",
title = "U.S. Covid Cases Per 10,000 People Against Density by Party \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
ggplot(m, aes(x = popDensity, y = casesPer10k, fill = Party)) +
scale_fill_manual(values = c("turquoise3", "coral3")) +
geom_point(size = 1,
alpha = 0.5) +
labs(
x = "Population Density",
y = "Cases Per 10k People",
title = "U.S. Covid Cases Per 10,000 People Against Density by Party \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
ggplot(m, aes(x = popDensity, y = casesPer10k, color = Party)) +
scale_color_manual(values = c("turquoise3", "coral3")) +
geom_point(size = 1,
alpha = 0.5) +
labs(
x = "Population Density",
y = "Cases Per 10k People",
title = "U.S. Covid Cases Per 10,000 People Against Density by Party \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
ggplot(m, aes(x = popDensity, y = casesPer10k, color = Party)) +
scale_color_manual(values = c("turquoise4", "coral3")) +
geom_point(size = 1,
alpha = 0.5) +
labs(
x = "Population Density",
y = "Cases Per 10k People",
title = "U.S. Covid Cases Per 10,000 People Against Density by Party \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
ggplot(m, aes(x = popDensity, y = casesPer10k, color = Party)) +
scale_color_manual(values = c("turquoise4", "orangered4")) +
geom_point(size = 1,
alpha = 0.5) +
labs(
x = "Population Density",
y = "Cases Per 10k People",
title = "U.S. Covid Cases Per 10,000 People Against Density by Party \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
ggplot(m, aes(x = popDensity, y = casesPer10k, color = Party)) +
scale_color_manual(values = c("turquoise4", "orangered3")) +
geom_point(size = 1,
alpha = 0.5) +
labs(
x = "Population Density",
y = "Cases Per 10k People",
title = "U.S. Covid Cases Per 10,000 People Against Density by Party \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
ggplot(m, aes(x = popDensity, y = casesPer10k, color = Party)) +
scale_color_manual(values = c("turquoise4", "orangered3")) +
geom_point(size = 1) +
labs(
x = "Population Density",
y = "Cases Per 10k People",
title = "U.S. Covid Cases Per 10,000 People Against Density by Party \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
ggplot(m, aes(x = popDensity, y = deathsPer10k)) +
geom_point(size = 1,
color = "seagreen4",
alpha = 0.5) +
geom_smooth(
formula = y ~ x,
method = "lm",
color = "black",
se = FALSE
) +
labs(
x = "Population Density",
y = "Deaths Per 10k People",
title = "U.S. Covid Deaths Per 10,000 People Against Density \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
ggplot(m, aes(x = popDensity, y = deathsPer10k)) +
geom_point(size = 1,
color = "yellow4",
alpha = 0.5) +
geom_smooth(
formula = y ~ x,
method = "lm",
color = "black",
se = FALSE
) +
labs(
x = "Population Density",
y = "Deaths Per 10k People",
title = "U.S. Covid Deaths Per 10,000 People Against Density \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
ggplot(m, aes(x = popDensity, y = deathsPer10k)) +
geom_point(size = 1,
color = "sienna4",
alpha = 0.5) +
geom_smooth(
formula = y ~ x,
method = "lm",
color = "black",
se = FALSE
) +
labs(
x = "Population Density",
y = "Deaths Per 10k People",
title = "U.S. Covid Deaths Per 10,000 People Against Density \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
View(c)
View(c_original)
View(c)
View(c)
View(c)
ggplot(m, aes(x = AveStatePolicy, y = casesPer10k, color = Party)) +
scale_color_manual(values = c("turquoise4", "orangered3")) +
geom_point(size = 1) +
labs(
x = "Population Density",
y = "Cases Per 10k People",
title = "U.S. Covid Cases Per 10,000 People Against Density by Party \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
ggplot(m, aes(x = AveStatePolicy, y = CasesPerDay, color = Party)) +
scale_color_manual(values = c("turquoise4", "orangered3")) +
geom_point(size = 1) +
labs(
x = "Average State Policy",
y = "Cases Per 10k People",
title = "U.S. Covid Cases Per 10,000 People Against Density by Party \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
ggplot(m, aes(x = AveStatePolicy, y = TotalCases, color = Party)) +
scale_color_manual(values = c("turquoise4", "orangered3")) +
geom_point(size = 1) +
labs(
x = "Average State Policy",
y = "Cases Per 10k People",
title = "U.S. Covid Cases Per 10,000 People Against Density by Party \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
ggplot(m, aes(x = AveStatePolicy, y = TotalCases, color = Party)) +
scale_color_manual(values = c("turquoise4", "orangered3")) +
geom_point(size = 1) +
labs(
x = "Average State Policy",
y = "Total Cases",
title = "U.S. Covid Cases Per 10,000 People Against Density by Party \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
ggplot(m, aes(x = AveStatePolicy, y = TotalCases, color = Gov)) +
scale_color_manual(values = c("turquoise4", "orangered3")) +
geom_point(size = 1) +
labs(
x = "Average State Policy",
y = "Total Cases",
title = "U.S. Covid Cases Per 10,000 People Against Density by Party \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
ggplot(m, aes(x = AveStatePolicy, y = TotalCases, color = Party)) +
scale_color_manual(values = c("turquoise4", "orangered3")) +
geom_point(size = 1) +
labs(
x = "Average State Policy",
y = "Total Cases",
title = "U.S. Covid Cases Per 10,000 People Against Density by Party \n",
caption = "\n Source: World Values Survey Wave 7 (2017-2020)",
) +
geom_label_repel(
size = 1.8,
aes(label = stateAbbr),
nudge_y = 1,
max.overlaps = getOption("ggrepel.max.overlaps", default = Inf)
) +
theme_classic(base_size = 10)
