# function to get country code
getCountryCode <- function(name) {
for(i in 1:NROW(countryCode$country)) {
if (name == countryCode$country[i]) {
return (countryCode$V2[i])
}
}
}
# create a country name
mexName <- c("Mexico")
# create ave satisfaction
mexCode <- getCountryCode("Mexico")
aveSatisfaction <- mean(wv %>%
filter(Country == mexCode) %>%
pull(Satisfied))
# observations for Mexico
mexObs <- wv %>%
filter(wv$Country == mexCode)
# create list containing all the observations for Mexico
mexList = list(countryName = mexName, Satisfaction = aveSatisfaction, observations = mexObs)
# display list
head(mexList)
# lm function
OLS.1 <- lm(
formula = (wv$DemocracyBad ~ age),
data= wv
)
# explaination
summary(OLS.1)
# what is OLS.1[[1]]?
print("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")
OLS.1[[1]]
# extract country code, democracy, age columns from wv
wv2 <- wv %>%
select(Country, DemocracyBad, age)
# create a hash to store country info (that only exist in wv). key: country code, value: country name
countryInfo <- hash()
for (i in 1:NROW(countryCode)) {
if(as.character(countryCode$V2[i]) %in% wv$Country) {
countryInfo[[as.character(countryCode$V2[i])]] <- countryCode$country[i]
}
}
# create a data frame to store the result
resultDf <- matrix(NA, length(unique(wv$Country)), 4)
colnames(resultDf) <- c("Country Code", "Country", "Coefficient", "T-statistic")
# resultDf <- data.frame(code = character(), country = character(), coeff = double(), tstat = double())
# loop through all countries for democracy vs age using wv2
i = 0
for (code in keys(countryInfo))  {
i = i + 1
# create a df for the current country
curCountryDf <- wv2 %>%
filter(as.character(Country) == as.character(code)) %>%
select(DemocracyBad, age)
# the bivariate relationship between opposition to democracy and age
if (code == 634) {
coeff <- NA
tstat <- NA
# result = data.frame(code, countryInfo[[code]], NA , NA)
} else {
curCountryFit <- lm(
formula = (DemocracyBad ~ age),
data = curCountryDf,
na.action = na.exclude
)
coeff <- summary(curCountryFit)$coefficients[2,1]
tstat <- summary(curCountryFit)$coefficients[2,3]
# result = data.frame(code, countryInfo[[code]], coeff, tstat)
# print(result)
}
# store the current result
# resultDf <- rbind(resultDf, result)
resultDf[i, ] <- c(code, countryInfo[[code]], coeff, tstat)
}
# display the result
print(resultDf)
# merge wv and countryCode -> wvJoint
wvJoint <- left_join(wv, countryCodes, by = c("Country" = "V2"))
# create a df to store result
resultDf2 <- data.frame(NA)
# calculate proportion and store all the results in resultDf2
for (code in keys(countryInfo)) {
if (code == 634) {
next
}
# create a df for the current country
curCountryDf <- wvJoint %>%
filter(as.character(Country) == as.character(code)) %>%
select(Country, DemocracyBad)
# store current result
curTable <- prop.table(table(wvJoint$DemocracyBad, wvJoint$country), margin = 2) * 100
# add current result to result
resultDf2 <- cbind(curTable)
}
# function that prints a table with response percent for each answer for *DemocracyBad* question for any country
getResponsePercent <- function(countryName) {
for (name in colnames(resultDf2)) {
if (name == countryName) {
print(resultDf2[, name, drop = FALSE])
}
}
}
# test: United States
getResponsePercent("United States")
cat("\n")
# test: China
getResponsePercent("China")
countryNames <- unique(wvJoint$country)
# print(wv[wv$Country == 233, ])
getFit <- function(name) {
subsetCountry <- subset(wvJoint, country == name)
curFit <- lm(
formula = (DemocracyBad ~ age + Income + Education + Male),
# data = wvJoint[name == wvJoint$Country, ]
data = subsetCountry
)
summary(curFit)
}
print(getFit("United States"))
listRes <- lapply(countryNames, getFit)
# Load country code data
countryCode = read_csv("Country codes for WVS wave 6.csv")
wv = read_csv("WV_small.csv")
# age variable
wv <- wv %>%
mutate(age = SurveyYear - BirthYear)
wvCountries =  countryCode %>%
filter(V2>0) %>%
filter(V2 %in% unique(wv$Country)) %>%
filter(V2 != 332)
# Load packages used in this session of R
library(tidyverse)
library(knitr)
library(dplyr)
library(hash)
library(plyr)
# As needed, set path to folder where data is located.
opts_knit$set(root.dir = "C:/Users/Xue Feng/Desktop/OPIM606/Lab2")
# merge wv and countryCode -> wvJoint
wvJoint <- left_join(wv, countryCode, by = c("Country" = "V2"))
# create a df to store result
resultDf2 <- data.frame(NA)
# calculate proportion and store all the results in resultDf2
for (code in keys(countryInfo)) {
if (code == 634) {
next
}
# create a df for the current country
curCountryDf <- wvJoint %>%
filter(as.character(Country) == as.character(code)) %>%
select(Country, DemocracyBad)
# store current result
curTable <- prop.table(table(wvJoint$DemocracyBad, wvJoint$country), margin = 2) * 100
# add current result to result
resultDf2 <- cbind(curTable)
}
# function that prints a table with response percent for each answer for *DemocracyBad* question for any country
getResponsePercent <- function(countryName) {
for (name in colnames(resultDf2)) {
if (name == countryName) {
print(resultDf2[, name, drop = FALSE])
}
}
}
# test: United States
getResponsePercent("United States")
cat("\n")
# test: China
getResponsePercent("China")
countryNames <- subeset(unique(wvJoint$country) != "Qatar")
countryNames <- subset(unique(wvJoint$country) != "Qatar")
countryNames <- unique(wvJoint$country)
countryNames
# print(wv[wv$Country == 233, ])
getFit <- function(name) {
subsetCountry <- subset(wvJoint, country == name)
curFit <- lm(
formula = (DemocracyBad ~ age + Income + Education + Male),
# data = wvJoint[name == wvJoint$Country, ]
data = subsetCountry
)
summary(curFit)
}
print(getFit("United States"))
listRes <- lapply(countryNames, getFit)
countryNames <- unique(wvJoint$country)
countryNames <- subset(countryNames != "Qatar")
countryNames <- unique(wvJoint$country)
countryNames <- subset(countryName, countryNames != "Qatar")
countryNames <- unique(wvJoint$country)
countryNames <- subset(countryNames, countryNames != "Qatar")
# print(wv[wv$Country == 233, ])
getFit <- function(name) {
subsetCountry <- subset(wvJoint, country == name)
curFit <- lm(
formula = (DemocracyBad ~ age + Income + Education + Male),
# data = wvJoint[name == wvJoint$Country, ]
data = subsetCountry
)
summary(curFit)
}
print(getFit("United States"))
listRes <- lapply(countryNames, getFit)
# length(wv.ols.list)
countryNames <- unique(wvJoint$country)
countryNames <- subset(countryNames, countryNames != "Qatar")
# print(wv[wv$Country == 233, ])
getFit <- function(name) {
subsetCountry <- subset(wvJoint, country == name)
curFit <- lm(
formula = (DemocracyBad ~ age + Income + Education + Male),
# data = wvJoint[name == wvJoint$Country, ]
data = subsetCountry
)
summary(curFit)
}
print(getFit("United States"))
listRes <- lapply(countryNames, getFit)
length(wv.ols.list)
countryNames <- unique(wvJoint$country)
countryNames <- subset(countryNames, countryNames != "Qatar")
countryNames
# print(wv[wv$Country == 233, ])
getFit <- function(name) {
subsetCountry <- subset(wvJoint, country == name)
curFit <- lm(
formula = (DemocracyBad ~ age + Income + Education + Male),
# data = wvJoint[name == wvJoint$Country, ]
data = subsetCountry
)
summary(curFit)
}
print(getFit("United States"))
listRes <- lapply(countryNames, getFit)
length(wv.ols.list)
countryNames <- unique(wvJoint$country)
countryNames <- subset(countryNames, countryNames != "Qatar")
# print(wv[wv$Country == 233, ])
getFit <- function(name) {
subsetCountry <- subset(wvJoint, country == name)
curFit <- lm(
formula = (DemocracyBad ~ age + Income + Education + Male),
# data = wvJoint[name == wvJoint$Country, ]
data = subsetCountry
)
summary(curFit)
}
print(getFit("United States"))
listRes <- sapply(countryNames, getFit)
length(wv.ols.list)
countryNames <- unique(wvJoint$country)
countryNames <- subset(countryNames, countryNames != "Qatar")
# print(wv[wv$Country == 233, ])
getFit <- function(name) {
subsetCountry <- subset(wvJoint, country == name)
curFit <- lm(
formula = (DemocracyBad ~ age + Income + Education + Male),
# data = wvJoint[name == wvJoint$Country, ]
data = subsetCountry
)
summary(curFit)
}
print(getFit("United States"))
#
# listRes <- sapply(countryNames, getFit)
# length(wv.ols.list)
countryNames <- unique(wvJoint$country)
countryNames <- subset(countryNames, countryNames != "Qatar")
# print(wv[wv$Country == 233, ])
getFit <- function(name) {
subsetCountry <- subset(wvJoint, country == name)
curFit <- lm(
formula = (DemocracyBad ~ age + Income + Education + Male),
# data = wvJoint[name == wvJoint$Country, ]
data = subsetCountry
)
summary(curFit)
}
print(getFit("United States"))
listRes <- sapply(countryNames, getFit)
length(wv.ols.list)
countryNames <- unique(wvJoint$country)
countryNames <- subset(countryNames, countryNames != "Qatar")
# print(wv[wv$Country == 233, ])
getFit <- function(name) {
subsetCountry <- subset(wvJoint, country == name)
curFit <- lm(
formula = (DemocracyBad ~ age + Income + Education + Male),
# data = wvJoint[name == wvJoint$Country, ]
data = subsetCountry
)
summary(curFit)
}
listRes <- sapply(countryNames, getFit)
print(getFit("United States"))
length(wv.ols.list)
countryNames <- unique(wvJoint$country)
countryNames <- subset(countryNames, countryNames != "Qatar")
# print(wv[wv$Country == 233, ])
getFit <- function(name) {
subsetCountry <- subset(wvJoint, country == name)
curFit <- lm(
formula = (DemocracyBad ~ age + Income + Education + Male),
# data = wvJoint[name == wvJoint$Country, ]
data = subsetCountry
)
summary(curFit)
}
print(getFit("United States"))
listRes <- sapply(countryNames, getFit)
wv.ols.list
countryNames <- unique(wvJoint$country)
countryNames <- subset(countryNames, countryNames != "Qatar")
# print(wv[wv$Country == 233, ])
getFit <- function(name) {
subsetCountry <- subset(wvJoint, country == name)
curFit <- lm(
formula = (DemocracyBad ~ age + Income + Education + Male),
# data = wvJoint[name == wvJoint$Country, ]
data = subsetCountry
)
summary(curFit)
}
print(getFit("United States"))
listRes <- sapply(countryNames, getFit)
listRes
countryNames <- unique(wvJoint$country)
countryNames <- subset(countryNames, countryNames != "Qatar")
# print(wv[wv$Country == 233, ])
getFit <- function(name) {
subsetCountry <- subset(wvJoint, country == name)
curFit <- lm(
formula = (DemocracyBad ~ age + Income + Education + Male),
# data = wvJoint[name == wvJoint$Country, ]
data = subsetCountry
)
summary(curFit)
}
print(getFit("United States"))
listRes <- sapply(countryNames, getFit)
length(listRes)
countryNames <- unique(wvJoint$country)
countryNames <- subset(countryNames, countryNames != "Qatar")
# print(wv[wv$Country == 233, ])
getFit <- function(name) {
subsetCountry <- subset(wvJoint, country == name)
curFit <- lm(
formula = (DemocracyBad ~ age + Income + Education + Male),
# data = wvJoint[name == wvJoint$Country, ]
data = subsetCountry
)
summary(curFit)
}
print(getFit("United States"))
listRes <- sapply(countryNames, getFit)
listRes
countryNames <- unique(wvJoint$country)
countryNames <- subset(countryNames, countryNames != "Qatar")
# print(wv[wv$Country == 233, ])
getFit <- function(name) {
subsetCountry <- subset(wvJoint, country == name)
curFit <- lm(
formula = (DemocracyBad ~ age + Income + Education + Male),
# data = wvJoint[name == wvJoint$Country, ]
data = subsetCountry
)
summary(curFit)
}
print(getFit("United States"))
listRes <- sapply(countryNames, getFit)
# test: United States
listRes[["United States"]]
# Load packages used in this session of R
library(tidyverse)
library(knitr)
library(dplyr)
library(hash)
library(plyr)
# As needed, set path to folder where data is located.
opts_knit$set(root.dir = "C:/Users/Xue Feng/Desktop/OPIM606/Lab2")
# Load country code data
countryCode = read_csv("Country codes for WVS wave 6.csv")
wv = read_csv("WV_small.csv")
# age variable
wv <- wv %>%
mutate(age = SurveyYear - BirthYear)
wvCountries =  countryCode %>%
filter(V2>0) %>%
filter(V2 %in% unique(wv$Country)) %>%
filter(V2 != 332)
# function to get country code
getCountryCode <- function(name) {
for(i in 1:NROW(countryCode$country)) {
if (name == countryCode$country[i]) {
return (countryCode$V2[i])
}
}
}
# create a country name
mexName <- c("Mexico")
# create ave satisfaction
mexCode <- getCountryCode("Mexico")
aveSatisfaction <- mean(wv %>%
filter(Country == mexCode) %>%
pull(Satisfied))
# observations for Mexico
mexObs <- wv %>%
filter(wv$Country == mexCode)
# create list containing all the observations for Mexico
mexList = list(countryName = mexName, Satisfaction = aveSatisfaction, observations = mexObs)
# display list
head(mexList)
# lm function
OLS.1 <- lm(
formula = (wv$DemocracyBad ~ age),
data= wv
)
# explaination
summary(OLS.1)
# what is OLS.1[[1]]?
print("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")
OLS.1[[1]]
# extract country code, democracy, age columns from wv
wv2 <- wv %>%
select(Country, DemocracyBad, age)
# create a hash to store country info (that only exist in wv). key: country code, value: country name
countryInfo <- hash()
for (i in 1:NROW(countryCode)) {
if(as.character(countryCode$V2[i]) %in% wv$Country) {
countryInfo[[as.character(countryCode$V2[i])]] <- countryCode$country[i]
}
}
# create a data frame to store the result
resultDf <- matrix(NA, length(unique(wv$Country)), 4)
colnames(resultDf) <- c("Country Code", "Country", "Coefficient", "T-statistic")
# resultDf <- data.frame(code = character(), country = character(), coeff = double(), tstat = double())
# loop through all countries for democracy vs age using wv2
i = 0
for (code in keys(countryInfo))  {
i = i + 1
# create a df for the current country
curCountryDf <- wv2 %>%
filter(as.character(Country) == as.character(code)) %>%
select(DemocracyBad, age)
# the bivariate relationship between opposition to democracy and age
if (code == 634) {
coeff <- NA
tstat <- NA
# result = data.frame(code, countryInfo[[code]], NA , NA)
} else {
curCountryFit <- lm(
formula = (DemocracyBad ~ age),
data = curCountryDf,
na.action = na.exclude
)
coeff <- summary(curCountryFit)$coefficients[2,1]
tstat <- summary(curCountryFit)$coefficients[2,3]
# result = data.frame(code, countryInfo[[code]], coeff, tstat)
# print(result)
}
# store the current result
# resultDf <- rbind(resultDf, result)
resultDf[i, ] <- c(code, countryInfo[[code]], coeff, tstat)
}
# display the result
print(resultDf)
# merge wv and countryCode -> wvJoint
wvJoint <- left_join(wv, countryCode, by = c("Country" = "V2"))
# create a df to store result
resultDf2 <- data.frame(NA)
# calculate proportion and store all the results in resultDf2
for (code in keys(countryInfo)) {
if (code == 634) {
next
}
# create a df for the current country
curCountryDf <- wvJoint %>%
filter(as.character(Country) == as.character(code)) %>%
select(Country, DemocracyBad)
# store current result
curTable <- prop.table(table(wvJoint$DemocracyBad, wvJoint$country), margin = 2) * 100
# add current result to result
resultDf2 <- cbind(curTable)
}
# function that prints a table with response percent for each answer for *DemocracyBad* question for any country
getResponsePercent <- function(countryName) {
for (name in colnames(resultDf2)) {
if (name == countryName) {
print(resultDf2[, name, drop = FALSE])
}
}
}
# test: United States
getResponsePercent("United States")
cat("\n")
# test: China
getResponsePercent("China")
countryNames <- unique(wvJoint$country)
countryNames <- subset(countryNames, countryNames != "Qatar")
# print(wv[wv$Country == 233, ])
getFit <- function(name) {
subsetCountry <- subset(wvJoint, country == name)
curFit <- lm(
formula = (DemocracyBad ~ age + Income + Education + Male),
# data = wvJoint[name == wvJoint$Country, ]
data = subsetCountry
)
summary(curFit)
}
listRes <- sapply(countryNames, getFit)
# test: United States
listRes[["United States"]]
